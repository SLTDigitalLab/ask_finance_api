# User and worker processes
user nobody;
worker_processes auto; 
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

# Network settings
events {
    worker_connections 768;
}

# HTTP settings and optimizations
http {
    include mime.types; 
    default_type application/octet-stream;

    types {
        application/javascript mjs;
    }

    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    # ssl_prefer_server_ciphers on;

    # Logging
    access_log /var/log/nginx/access.log; 
    error_log /var/log/nginx/error.log;

    # Caching and compression
    sendfile on;
    gzip on;
    gzip_disable "msie6"; 
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;


    # server {
        
    #     if ($host = theaisle.raccoon-ai.io) {
    #         return 301 https://$host$request_uri;
    #     }

    #     server_name theaisle.raccoon-ai.io;
    #     listen 80;
    #     return 404;

    # }

    # React application configuration
    server {
        listen 80;
        # use the certificates
        # ssl_certificate     /etc/letsencrypt/live/theaisle.raccoon-ai.io/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/theaisle.raccoon-ai.io/privkey.pem;
        # include /etc/letsencrypt/options-ssl-nginx.conf;
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        

        server_name aisleprojects.sltdigitallab.lk;

        root /usr/share/nginx/html; 
        index index.php index.html index.html;

        location / {
            try_files $uri /index.html;
        }

        # Reverse Proxy to Backend API
        location /api {  # Route for API requests
        proxy_pass http://api:8000; # Assuming your backend is on port 3000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

        # Cache static assets
        location ~* \.(js|mjs|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public";
        }

        location ~ /.well-known/acme-challenge {
         allow all;
            }

        location /images/ {
            alias /home/user/stores/images/;
            try_files $uri =404;
        }

    }

    # Optional: Server for static assets (if you have a separate domain) 
    # server {
    #     listen 80;
    #     server_name assets.yourdomain.com;
    #     root /var/www/yourdomain.com/assets; 
    #     index index.html;

    #     # ... (add caching rules here as well)
    # }
}
